(*#line 15.10 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)functor LmlLexFun(structure Tokens : Lml_TOKENS)(*#line 1.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
=
   struct
    structure UserDeclarations =
      struct
(*#line 1.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)type pos = int
type svalue = Tokens.svalue
type ('a,'b) token = ('a,'b) Tokens.token
type lexresult = (svalue,pos) token

fun eof() = Tokens.EOF(0,0)

fun someOrFail (SOME x) = x
  | someOrFail NONE = raise (Fail "Invalid Constant!")

val tliteral = ref ""
val tlstart = ref 0

(*#line 19.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
end (* end of user routines *)
exception LexError (* raised if illegal leaf action tried *)
structure Internal =
	struct

datatype yyfinstate = N of int
type statedata = {fin : yyfinstate list, trans: string}
(* transition & final state table *)
val tab = let
val s = [ 
 (0, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (1, 
"\000\000\000\000\000\000\000\000\000\017\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (3, 
"\018\018\018\018\018\018\018\018\018\139\142\018\018\141\018\018\
\\018\018\018\018\018\018\018\018\018\018\018\018\018\018\018\018\
\\139\138\137\136\018\018\018\024\134\131\130\129\128\125\123\122\
\\118\118\118\118\118\118\118\118\118\118\114\113\110\108\106\105\
\\018\024\024\024\024\024\024\024\024\024\024\024\024\024\024\024\
\\024\024\024\024\024\024\024\024\024\024\024\104\018\103\018\024\
\\018\096\024\024\088\082\074\024\024\071\024\024\068\024\063\056\
\\024\024\024\039\029\024\026\024\024\024\024\023\021\020\019\018\
\\018"
),
 (7, 
"\143\143\143\143\143\143\143\143\143\143\147\143\143\146\143\143\
\\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\
\\143\143\143\143\143\143\143\143\143\143\144\143\143\143\143\143\
\\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\
\\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\
\\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\
\\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\
\\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\143\
\\143"
),
 (13, 
"\148\148\148\148\148\148\148\148\148\148\151\148\148\150\148\148\
\\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\
\\148\148\149\148\148\148\148\148\148\148\148\148\148\148\148\148\
\\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\
\\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\
\\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\
\\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\
\\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\148\
\\148"
),
 (21, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\022\000\000\000\
\\000"
),
 (24, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (26, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\027\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (27, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\028\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (29, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\036\025\025\025\025\025\025\025\
\\025\025\033\025\025\025\025\025\025\030\025\000\000\000\000\000\
\\000"
),
 (30, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\031\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (31, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\032\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (33, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\034\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (34, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\035\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (36, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\037\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (37, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\038\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (39, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\048\025\025\025\025\025\025\
\\025\025\025\025\040\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (40, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\041\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (41, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\042\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (42, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\043\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (43, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\044\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (44, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\045\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (45, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\046\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (46, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\047\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (48, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\049\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (49, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\050\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (50, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\051\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (51, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\052\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (52, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\053\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (53, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\054\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (54, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\055\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (56, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\062\025\025\025\025\025\025\025\025\025\
\\025\025\057\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (57, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\058\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (58, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\059\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (59, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\060\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (60, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\061\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (63, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\066\025\025\025\025\025\064\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (64, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\065\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (66, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\067\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (68, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\069\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (69, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\070\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (71, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\073\025\025\025\025\025\025\025\072\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (74, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\078\025\025\025\025\025\025\025\025\025\025\025\025\077\025\
\\025\025\025\025\025\075\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (75, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\076\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (78, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\079\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (79, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\080\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (80, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\081\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (82, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\085\025\083\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (83, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\084\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (85, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\086\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (86, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\087\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (88, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\089\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (89, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\090\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (90, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\091\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (91, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\092\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (92, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\093\025\000\000\000\000\000\
\\000"
),
 (93, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\094\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (94, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\095\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (96, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\097\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (97, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\098\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (98, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\099\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (99, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\100\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (100, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\101\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (101, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\
\\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\000\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\025\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\025\
\\000\025\025\025\025\025\025\025\025\025\025\025\025\025\025\102\
\\025\025\025\025\025\025\025\025\025\025\025\000\000\000\000\000\
\\000"
),
 (106, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\107\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (108, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\109\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (110, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\112\111\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (114, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\117\000\000\116\115\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (118, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\120\000\
\\119\119\119\119\119\119\119\119\119\119\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (120, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\121\121\121\121\121\121\121\121\121\121\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (123, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\124\124\124\124\124\124\124\124\124\124\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (125, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\127\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\126\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (131, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\132\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (132, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\133\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (134, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\135\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (139, 
"\000\000\000\000\000\000\000\000\000\140\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\140\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
 (144, 
"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\145\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\\000"
),
(0, "")]
fun f x = x 
val s = map f (rev (tl (rev s))) 
exception LexHackingError 
fun look ((j,x)::r, i: int) = if i = j then x else look(r, i) 
  | look ([], i) = raise LexHackingError
fun g {fin=x, trans=i} = {fin=x, trans=look(s,i)} 
in Vector.fromList(map g 
[{fin = [], trans = 0},
{fin = [(N 1)], trans = 1},
{fin = [(N 1)], trans = 1},
{fin = [(N 231)], trans = 3},
{fin = [(N 231)], trans = 3},
{fin = [], trans = 0},
{fin = [], trans = 0},
{fin = [], trans = 7},
{fin = [], trans = 7},
{fin = [], trans = 0},
{fin = [], trans = 0},
{fin = [], trans = 0},
{fin = [], trans = 0},
{fin = [], trans = 13},
{fin = [], trans = 13},
{fin = [], trans = 0},
{fin = [], trans = 0},
{fin = [(N 1)], trans = 1},
{fin = [(N 233)], trans = 0},
{fin = [(N 148),(N 233)], trans = 0},
{fin = [(N 200),(N 233)], trans = 0},
{fin = [(N 184),(N 233)], trans = 21},
{fin = [(N 124)], trans = 0},
{fin = [(N 198),(N 233)], trans = 0},
{fin = [(N 227),(N 233)], trans = 24},
{fin = [(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 26},
{fin = [(N 227)], trans = 27},
{fin = [(N 5),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 29},
{fin = [(N 227)], trans = 30},
{fin = [(N 227)], trans = 31},
{fin = [(N 70),(N 227)], trans = 24},
{fin = [(N 227)], trans = 33},
{fin = [(N 227)], trans = 34},
{fin = [(N 94),(N 227)], trans = 24},
{fin = [(N 227)], trans = 36},
{fin = [(N 227)], trans = 37},
{fin = [(N 44),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 39},
{fin = [(N 227)], trans = 40},
{fin = [(N 227)], trans = 41},
{fin = [(N 227)], trans = 42},
{fin = [(N 227)], trans = 43},
{fin = [(N 12),(N 227)], trans = 44},
{fin = [(N 227)], trans = 45},
{fin = [(N 227)], trans = 46},
{fin = [(N 22),(N 227)], trans = 24},
{fin = [(N 227)], trans = 48},
{fin = [(N 26),(N 227)], trans = 49},
{fin = [(N 227)], trans = 50},
{fin = [(N 227)], trans = 51},
{fin = [(N 227)], trans = 52},
{fin = [(N 227)], trans = 53},
{fin = [(N 227)], trans = 54},
{fin = [(N 36),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 56},
{fin = [(N 227)], trans = 57},
{fin = [(N 227)], trans = 58},
{fin = [(N 227)], trans = 59},
{fin = [(N 227)], trans = 60},
{fin = [(N 182),(N 227)], trans = 24},
{fin = [(N 65),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 63},
{fin = [(N 227)], trans = 64},
{fin = [(N 89),(N 227)], trans = 24},
{fin = [(N 227)], trans = 66},
{fin = [(N 53),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 68},
{fin = [(N 227)], trans = 69},
{fin = [(N 78),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 71},
{fin = [(N 81),(N 227)], trans = 24},
{fin = [(N 39),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 74},
{fin = [(N 227)], trans = 75},
{fin = [(N 74),(N 227)], trans = 24},
{fin = [(N 167),(N 227)], trans = 24},
{fin = [(N 227)], trans = 78},
{fin = [(N 227)], trans = 79},
{fin = [(N 227)], trans = 80},
{fin = [(N 100),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 82},
{fin = [(N 227)], trans = 83},
{fin = [(N 85),(N 227)], trans = 24},
{fin = [(N 227)], trans = 85},
{fin = [(N 227)], trans = 86},
{fin = [(N 49),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 88},
{fin = [(N 227)], trans = 89},
{fin = [(N 227)], trans = 90},
{fin = [(N 227)], trans = 91},
{fin = [(N 227)], trans = 92},
{fin = [(N 227)], trans = 93},
{fin = [(N 227)], trans = 94},
{fin = [(N 62),(N 227)], trans = 24},
{fin = [(N 227),(N 233)], trans = 96},
{fin = [(N 227)], trans = 97},
{fin = [(N 227)], trans = 98},
{fin = [(N 227)], trans = 99},
{fin = [(N 227)], trans = 100},
{fin = [(N 227)], trans = 101},
{fin = [(N 175),(N 227)], trans = 24},
{fin = [(N 204),(N 233)], trans = 0},
{fin = [(N 202),(N 233)], trans = 0},
{fin = [(N 119),(N 233)], trans = 0},
{fin = [(N 164),(N 233)], trans = 106},
{fin = [(N 160)], trans = 0},
{fin = [(N 146),(N 233)], trans = 108},
{fin = [(N 154)], trans = 0},
{fin = [(N 162),(N 233)], trans = 110},
{fin = [(N 151)], trans = 0},
{fin = [(N 157)], trans = 0},
{fin = [(N 208),(N 233)], trans = 0},
{fin = [(N 192),(N 233)], trans = 114},
{fin = [(N 136)], trans = 0},
{fin = [(N 190)], trans = 0},
{fin = [(N 187)], trans = 0},
{fin = [(N 103),(N 233)], trans = 118},
{fin = [(N 103)], trans = 118},
{fin = [(N 112)], trans = 120},
{fin = [(N 112)], trans = 120},
{fin = [(N 144),(N 233)], trans = 0},
{fin = [(N 233)], trans = 123},
{fin = [(N 112)], trans = 123},
{fin = [(N 140),(N 233)], trans = 125},
{fin = [(N 133)], trans = 0},
{fin = [(N 117)], trans = 0},
{fin = [(N 206),(N 233)], trans = 0},
{fin = [(N 138),(N 233)], trans = 0},
{fin = [(N 142),(N 233)], trans = 0},
{fin = [(N 196),(N 233)], trans = 131},
{fin = [], trans = 132},
{fin = [(N 130)], trans = 0},
{fin = [(N 194),(N 233)], trans = 134},
{fin = [(N 211)], trans = 0},
{fin = [(N 126),(N 233)], trans = 0},
{fin = [(N 114),(N 233)], trans = 0},
{fin = [(N 121),(N 233)], trans = 0},
{fin = [(N 231),(N 233)], trans = 139},
{fin = [(N 231)], trans = 139},
{fin = [(N 229),(N 233)], trans = 0},
{fin = [(N 229)], trans = 0},
{fin = [(N 218)], trans = 0},
{fin = [(N 218)], trans = 144},
{fin = [(N 214)], trans = 0},
{fin = [(N 216),(N 218)], trans = 0},
{fin = [(N 216)], trans = 0},
{fin = [(N 224)], trans = 0},
{fin = [(N 220),(N 224)], trans = 0},
{fin = [(N 222),(N 224)], trans = 0},
{fin = [(N 222)], trans = 0}])
end
structure StartStates =
	struct
	datatype yystartstate = STARTSTATE of int

(* start state definitions *)

val COMMENT = STARTSTATE 7;
val EMLML = STARTSTATE 15;
val HTML = STARTSTATE 9;
val INITIAL = STARTSTATE 1;
val LINECOMMENT = STARTSTATE 5;
val LML = STARTSTATE 3;
val STRINGLIT = STARTSTATE 13;
val XML = STARTSTATE 11;

end
type result = UserDeclarations.lexresult
	exception LexerError (* raised if illegal leaf action tried *)
end

structure YYPosInt : INTEGER = Int
fun makeLexer yyinput =
let	val yygone0= YYPosInt.fromInt ~1
	val yyb = ref "\n" 		(* buffer *)
	val yybl = ref 1		(*buffer length *)
	val yybufpos = ref 1		(* location of next character to use *)
	val yygone = ref yygone0	(* position in file of beginning of buffer *)
	val yydone = ref false		(* eof found yet? *)
	val yybegin = ref 1		(*Current 'start state' for lexer *)

	val YYBEGIN = fn (Internal.StartStates.STARTSTATE x) =>
		 yybegin := x

fun lex () : Internal.result =
let fun continue() = lex() in
  let fun scan (s,AcceptingLeaves : Internal.yyfinstate list list,l,i0) =
	let fun action (i,nil) = raise LexError
	| action (i,nil::l) = action (i-1,l)
	| action (i,(node::acts)::l) =
		case node of
		    Internal.N yyk => 
			(let fun yymktext() = substring(!yyb,i0,i-i0)
			     val yypos = YYPosInt.+(YYPosInt.fromInt i0, !yygone)
			open UserDeclarations Internal.StartStates
 in (yybufpos := i; case yyk of 

			(* Application actions *)

  1 => ((*#line 26.21 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)YYBEGIN LML; continue()(*#line 1086.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 100 => ((*#line 46.23 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.FALSE(yypos,yypos+5)(*#line 1088.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 103 => let val yytext=yymktext() in (*#line 48.20 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LINT(someOrFail(Int.fromString yytext),yypos,yypos+size yytext)(*#line 1090.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
 end
| 112 => let val yytext=yymktext() in (*#line 49.18 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LREAL(someOrFail(Real.fromString yytext),yypos,yypos+size yytext)(*#line 1092.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
 end
| 114 => ((*#line 50.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)YYBEGIN STRINGLIT; tlstart := yypos; tliteral := ""; continue()(*#line 1094.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 117 => ((*#line 52.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BTYPESTART(yypos,yypos+2)(*#line 1096.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 119 => ((*#line 53.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BTYPERECV(yypos,yypos+1)(*#line 1098.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 12 => ((*#line 29.20 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.STRUCT(yypos,yypos+3)(*#line 1100.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 121 => ((*#line 54.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BANG(yypos,yypos+1)(*#line 1102.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 124 => ((*#line 55.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BTYPECOMP(yypos,yypos+2)(*#line 1104.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 126 => ((*#line 56.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BTYPECHOICE(yypos,yypos+1)(*#line 1106.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 130 => ((*#line 57.17 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BTYPEEND(yypos,yypos+3)(*#line 1108.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 133 => ((*#line 59.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.ARROW(yypos,yypos+2)(*#line 1110.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 136 => ((*#line 60.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.ASCRIBEO(yypos,yypos+2)(*#line 1112.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 138 => ((*#line 61.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.PLUS(yypos,yypos+1)(*#line 1114.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 140 => ((*#line 62.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.MINUS(yypos,yypos+1)(*#line 1116.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 142 => ((*#line 63.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.TIMES(yypos,yypos+1)(*#line 1118.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 144 => ((*#line 64.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.DIVIDE(yypos,yypos+1)(*#line 1120.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 146 => ((*#line 65.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.EQUALS(yypos,yypos+2)(*#line 1122.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 148 => ((*#line 66.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.UMINUS(yypos,yypos+1)(*#line 1124.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 151 => ((*#line 67.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.NEQ(yypos,yypos+2)(*#line 1126.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 154 => ((*#line 68.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.FNASSIGN(yypos,yypos+2)(*#line 1128.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 157 => ((*#line 69.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LTEQ(yypos,yypos+2)(*#line 1130.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 160 => ((*#line 70.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.GTEQ(yypos,yypos+2)(*#line 1132.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 162 => ((*#line 71.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LT(yypos,yypos+1)(*#line 1134.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 164 => ((*#line 72.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.GT(yypos,yypos+1)(*#line 1136.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 167 => ((*#line 73.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.FN(yypos,yypos+1)(*#line 1138.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 175 => ((*#line 74.21 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BAND(yypos,yypos+7)(*#line 1140.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 182 => ((*#line 75.20 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BOR(yypos,yypos+6)(*#line 1142.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 184 => ((*#line 76.28 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.CLAUSE(yypos,yypos+1)(*#line 1144.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 187 => ((*#line 77.29 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.CONS(yypos,yypos+2)(*#line 1146.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 190 => ((*#line 78.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.MUTASSIGN(yypos,yypos+2)(*#line 1148.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 192 => ((*#line 79.28 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.TYPEDELIM(yypos,yypos+1)(*#line 1150.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 194 => ((*#line 81.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LPAR(yypos,yypos+1)(*#line 1152.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 196 => ((*#line 82.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.RPAR(yypos,yypos+1)(*#line 1154.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 198 => ((*#line 83.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LBR(yypos,yypos+1)(*#line 1156.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 200 => ((*#line 84.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.RBR(yypos,yypos+1)(*#line 1158.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 202 => ((*#line 85.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LSQ(yypos,yypos+1)(*#line 1160.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 204 => ((*#line 86.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.RSQ(yypos,yypos+1)(*#line 1162.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 206 => ((*#line 87.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.COMMA(yypos,yypos+1)(*#line 1164.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 208 => ((*#line 88.15 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.SEMI(yypos,yypos+1)(*#line 1166.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 211 => ((*#line 90.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)YYBEGIN COMMENT; continue()(*#line 1168.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 214 => ((*#line 92.20 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)YYBEGIN LML; continue()(*#line 1170.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 216 => ((*#line 93.21 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)continue()(*#line 1172.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 218 => ((*#line 94.17 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)continue()(*#line 1174.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 22 => ((*#line 30.22 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.STRUCTURE(yypos,yypos+9)(*#line 1176.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 220 => ((*#line 96.22 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)YYBEGIN LML; Tokens.LSTR(!tliteral,!tlstart,!tlstart + size (!tliteral))(*#line 1178.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 222 => ((*#line 97.22 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.ERROR(!tlstart,yypos)(*#line 1180.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 224 => let val yytext=yymktext() in (*#line 98.19 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)tliteral := !tliteral ^ yytext; continue()(*#line 1182.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
 end
| 227 => let val yytext=yymktext() in (*#line 100.19 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.IDENT(yytext,yypos,yypos+size yytext)(*#line 1184.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
 end
| 229 => ((*#line 102.17 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)continue()(*#line 1186.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 231 => ((*#line 103.17 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)continue()(*#line 1188.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 233 => let val yytext=yymktext() in (*#line 104.14 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.ERROR(yypos,yypos+size yytext)(*#line 1190.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
 end
| 26 => ((*#line 31.17 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.SIG(yypos,yypos+3)(*#line 1192.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 36 => ((*#line 32.22 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.SIGNATURE(yypos,yypos+9)(*#line 1194.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 39 => ((*#line 33.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.IF(yypos,yypos+2)(*#line 1196.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 44 => ((*#line 34.18 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.THEN(yypos,yypos+2)(*#line 1198.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 49 => ((*#line 35.18 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.ELSE(yypos,yypos+4)(*#line 1200.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 5 => ((*#line 28.17 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.VAL(yypos,yypos+3)(*#line 1202.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 53 => ((*#line 36.28 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.NIL(yypos,yypos+3)(*#line 1204.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 62 => ((*#line 37.22 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.DATATYPE(yypos,yypos+8)(*#line 1206.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 65 => ((*#line 38.16 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.OF(yypos,yypos+2)(*#line 1208.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 70 => ((*#line 39.18 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.TYPE(yypos,yypos+4)(*#line 1210.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 74 => ((*#line 40.26 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.FUN(yypos,yypos+3)(*#line 1212.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 78 => ((*#line 41.26 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.LET(yypos,yypos+3)(*#line 1214.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 81 => ((*#line 42.25 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.IN(yypos,yypos+2)(*#line 1216.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 85 => ((*#line 43.26 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.END(yypos,yypos+3)(*#line 1218.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 89 => ((*#line 44.21 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.BNOT(yypos,yypos+3)(*#line 1220.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| 94 => ((*#line 45.22 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex"*)Tokens.TRUE(yypos,yypos+4)(*#line 1222.1 "/Users/gdpe/Documents/ml2pp0/compiler/src/frontend/lml.lex.sml"*)
)
| _ => raise Internal.LexerError

		) end )

	val {fin,trans} = Vector.sub(Internal.tab, s)
	val NewAcceptingLeaves = fin::AcceptingLeaves
	in if l = !yybl then
	     if trans = #trans(Vector.sub(Internal.tab,0))
	       then action(l,NewAcceptingLeaves
) else	    let val newchars= if !yydone then "" else yyinput 1024
	    in if (size newchars)=0
		  then (yydone := true;
		        if (l=i0) then UserDeclarations.eof ()
		                  else action(l,NewAcceptingLeaves))
		  else (if i0=l then yyb := newchars
		     else yyb := substring(!yyb,i0,l-i0)^newchars;
		     yygone := YYPosInt.+(!yygone, YYPosInt.fromInt i0);
		     yybl := size (!yyb);
		     scan (s,AcceptingLeaves,l-i0,0))
	    end
	  else let val NewChar = Char.ord(CharVector.sub(!yyb,l))
		val NewChar = if NewChar<128 then NewChar else 128
		val NewState = Char.ord(CharVector.sub(trans,NewChar))
		in if NewState=0 then action(l,NewAcceptingLeaves)
		else scan(NewState,NewAcceptingLeaves,l+1,i0)
	end
	end
(*
	val start= if substring(!yyb,!yybufpos-1,1)="\n"
then !yybegin+1 else !yybegin
*)
	in scan(!yybegin (* start *),nil,!yybufpos,!yybufpos)
    end
end
  in lex
  end
end
